{"version":3,"file":"static/js/550.bf93eafb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import React, { useState } from 'react';\nimport styles from './ContactForm.module.css';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/Contacts/contactsSlice';\nimport { TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact, { isLoading, isError, error }] = useAddContactMutation();\n  const { refetch } = useGetContactsQuery();\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    } else if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!name || !number) {\n      console.error('Error adding contact: Missing required fields');\n      return;\n    }\n\n    console.log('Submitting:', { name: name, number: number });\n\n    try {\n      await addContact({ name: name, number: number });\n      refetch();\n    } catch (error) {\n      console.error('Error adding contact:', error);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.contactForm}>\n      {isError && <div className={styles.error}>{error?.message}</div>}\n\n      <label htmlFor=\"name\" className={styles.label}>\n        <TextField\n          name=\"name\"\n          variant=\"standard\"\n          label=\"name\"\n          type=\"text\"\n          value={name}\n          className={styles.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Ім'я може містити лише літери, апостроф, тире та пробіли. Наприклад, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor=\"number\" className={styles.label}>\n        <TextField\n          name=\"number\"\n          variant=\"standard\"\n          label=\"number\"\n          type=\"tel\"\n          value={number}\n          className={styles.input}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Номер телефону повинен бути цифрами і може містити пробіли, тире, круглі дужки та може починатися з +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={styles.button} disabled={isLoading}>\n        {isLoading ? 'Додається...' : 'Додати контакт'}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from '../../redux/Contacts/contactsSlice';\nimport { selectFilter } from '../../redux/Contacts/filterSlice';\nimport { Card, Grid, Typography, IconButton, Avatar, Box } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { blue } from '@mui/material/colors';\n\nconst ContactList = () => {\n  const { data, refetch } = useGetContactsQuery();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const filterItems = useSelector(selectFilter);\n\n  const handleDeleteContact = async id => {\n    await deleteContact({ id });\n    refetch();\n  };\n\n  const normalizedFilter = filterItems.toLowerCase();\n  \n  \n  const sortedContacts = data\n    ? data.slice().sort((a, b) => a.name.localeCompare(b.name))\n    : [];\n\n  const filteredContacts = sortedContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <Grid container spacing={2}>\n      {filteredContacts.map(({ id, number, name }) => (\n        <Grid\n          item\n          xs={12} \n          key={id}\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Card sx={{ display: 'flex', alignItems: 'center', padding: 2, width: '100%' }}>\n            <Avatar sx={{ bgcolor: blue[600], marginRight: 2 }} alt={name}>\n              {name.charAt(0).toUpperCase()}\n            </Avatar>\n            <Box sx={{ flex: 1 }}>\n              <Typography\n                variant=\"body1\"\n                component=\"span\"\n                sx={{ fontWeight: 'bold', marginRight: 1 }}\n              >\n                {name}:\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                component=\"span\"\n                sx={{ color: 'text.secondary' }}\n              >\n                {number}\n              </Typography>\n            </Box>\n            <IconButton\n              onClick={() => handleDeleteContact(id)}\n              disabled={isLoading}\n              sx={{ marginLeft: 'auto' }}\n            >\n              <DeleteForeverIcon color=\"error\" />\n            </IconButton>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { updateFilter } from 'redux/Contacts/filterSlice';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const value = e.target.value;\n    setFilterValue(value);\n    dispatch(updateFilter(value));\n  };\n\n  return (\n    <div>\n      <label className={styles.filterLabel}>\n        <TextField\n          sx={{ \n            mb: '1.5rem', \n            width: '100%',  // Розширює ширину до 100% батьківського контейнера\n            maxWidth: 400   // Можна задати максимальну ширину, якщо потрібно\n          }}\n          label=\"Search\"\n          className={styles.filterInput}\n          type=\"text\"\n          value={filterValue}\n          onChange={changeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', padding: 3, height: '100vh', overflow: 'hidden' }}>\n      \n      <Box sx={{ flex: 1, maxWidth: 400, marginRight: 2 }}>\n        <Typography \n          variant=\"h4\" \n          component=\"h1\" \n          sx={{ \n            fontWeight: 'bold', \n            mb: 2, \n            fontSize: '1.75rem',\n            color: '#007bff', \n            textAlign: 'center'\n          }}\n        >\n          Add Contact\n        </Typography>\n        <ContactForm />\n      </Box>\n\n      <Box sx={{ flex: 2, maxWidth: 800, display: 'flex', flexDirection: 'column', height: '100%' }}>\n        <Box sx={{ flex: '0 1 auto', mb: 2 }}>\n          <Typography \n            variant=\"h4\" \n            component=\"h2\" \n            sx={{ \n              fontWeight: 'bold', \n              mb: 1, \n              fontSize: '1.75rem',\n              color: '#007bff', \n              textAlign: 'center',\n              marginBottom: '16px',\n            }}\n          >\n            Contacts\n          </Typography>\n          <Filter />\n        </Box>\n        <Box sx={{ flex: '1 1 auto', overflowY: 'auto' }}>\n          <ContactList />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","addContact","_useAddContactMutatio3","isLoading","isError","error","refetch","useGetContactsQuery","handleChange","_ref","target","value","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","e","_context","prev","next","preventDefault","console","abrupt","log","t0","stop","_x","apply","arguments","_jsxs","onSubmit","className","styles","children","_jsx","message","htmlFor","TextField","variant","label","type","pattern","title","required","onChange","disabled","_useGetContactsQuery","data","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","filterItems","useSelector","selectFilter","handleDeleteContact","id","normalizedFilter","toLowerCase","filteredContacts","slice","sort","a","b","localeCompare","filter","contact","includes","Grid","container","spacing","map","item","xs","display","alignItems","justifyContent","Card","sx","padding","width","Avatar","bgcolor","blue","marginRight","alt","charAt","toUpperCase","Box","flex","Typography","component","fontWeight","color","IconButton","onClick","marginLeft","DeleteForeverIcon","filterValue","setFilterValue","dispatch","useDispatch","mb","maxWidth","updateFilter","Contacts","flexDirection","height","overflow","fontSize","textAlign","ContactForm","marginBottom","Filter","overflowY","ContactList"],"sourceRoot":""}