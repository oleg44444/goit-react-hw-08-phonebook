{"version":3,"file":"static/js/18.54943c28.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import React, { useState } from 'react';\nimport styles from './ContactForm.module.css';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/Contacts/contactsSlice';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact, { isLoading, isError, error }] = useAddContactMutation();\n  const { refetch } = useGetContactsQuery();\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    } else if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!name || !number) {\n      console.error('Error adding contact: Missing required fields');\n      return;\n    }\n\n    console.log('Submitting:', { name: name, number: number });\n\n    try {\n      await addContact({ name: name, number: number });\n      refetch();\n    } catch (error) {\n      console.error('Error adding contact:', error);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.contactForm}>\n      {isError && <div className={styles.error}>{error?.message}</div>}\n\n      <label htmlFor=\"name\" className={styles.label}>\n        Ім'я\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          className={styles.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Ім'я може містити лише літери, апостроф, тире та пробіли. Наприклад, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor=\"number\" className={styles.label}>\n        Телефон\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          className={styles.input}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Номер телефону повинен бути цифрами і може містити пробіли, тире, круглі дужки та може починатися з +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={styles.button} disabled={isLoading}>\n        {isLoading ? 'Додається...' : 'Додати контакт'}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactDetails\":\"ContactList_contactDetails__4KXhG\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import React from 'react';\nimport styles from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from '../../redux/Contacts/contactsSlice';\nimport { selectFilter } from '../../redux/Contacts/filterSlice';\n\nconst ContactList = () => {\n  const { data, refetch } = useGetContactsQuery(); // Додали refetch до деструктуризації\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const filterItems = useSelector(selectFilter);\n\n  const handleDeleteContact = async id => {\n    await deleteContact({ id });\n    refetch(); // Викликаємо refetch після видалення контакту\n  };\n\n  const normalizedFilter = filterItems.toLowerCase();\n  const filteredContacts = data\n    ? data.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n    : [];\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, number, name }) => (\n        <li key={id} className={styles.contactItem}>\n          <p className={styles.contactDetails}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => handleDeleteContact(id)}\n            className={styles.deleteButton}\n            disabled={isLoading}\n          >\n            Видалити\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { updateFilter } from 'redux/Contacts/filterSlice';\n\nconst Filter = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const value = e.target.value;\n    setFilterValue(value);\n    dispatch(updateFilter(value));\n  };\n\n  return (\n    <div>\n      <label className={styles.filterLabel}>\n        Знайти контакти за ім'ям\n        <input\n          className={styles.filterInput}\n          type=\"text\"\n          value={filterValue}\n          onChange={changeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","addContact","_useAddContactMutatio3","isLoading","isError","error","refetch","useGetContactsQuery","handleChange","_ref","target","value","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","e","_context","prev","next","preventDefault","console","abrupt","log","t0","stop","_x","apply","arguments","_jsxs","onSubmit","className","styles","children","_jsx","message","htmlFor","type","pattern","title","required","onChange","disabled","_useGetContactsQuery","data","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","filterItems","useSelector","selectFilter","handleDeleteContact","id","normalizedFilter","toLowerCase","filteredContacts","filter","contact","includes","map","onClick","filterValue","setFilterValue","dispatch","useDispatch","updateFilter","Contacts","_Fragment","ContactForm","Filter","ContactList"],"sourceRoot":""}